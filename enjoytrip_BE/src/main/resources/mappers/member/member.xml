<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.trip.domain.member.repository.MemberDao">

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO member (email, password, name, role, birth_date, profile_image, created_at)
		VALUES (#{email}, #{password}, #{name}, #{role}, #{birthDate}, #{profileImage}, NOW());
	</insert>

	<select id="selectAll" resultMap="memberMap">
		SELECT * FROM member
		<include refid="memberSearchCondition" />
		LIMIT #{offset}, #{size}
	</select>

	<select id="countAll">
		SELECT count(*) from member
		<include refid="memberSearchCondition" />
	</select>

	<sql id="memberSearchCondition">
		<where>
			<if test="keyword != null">
				AND name LIKE CONCAT('%', #{keyword}, '%')
			</if>

			<if test="status != null">
				<choose>
					<when test="status == '탈퇴'">
						AND deleted_at IS NOT NULL
					</when>
					<when test="status == '정지'">
						AND blocked_at IS NOT NULL
					</when>
					<when test="status == '활성'">
						AND deleted_at IS NULL
						AND blocked_at IS NULL
					</when>
				</choose>
			</if>
		</where>
	</sql>


	<update id="block">
		UPDATE member
			SET blocked_at = now()
		WHERE id=#{memberId}
	</update>

	<update id="unblock">
		UPDATE member
		SET blocked_at = NULL
		WHERE id=#{memberId}
	</update>

	<select id="selectById" resultMap="memberMap">
		SELECT * FROM member
		WHERE id=#{id}
	</select>

	<select id="selectByEmail" resultMap="memberMap">
		SELECT * FROM member
		WHERE email=#{email}
		AND deleted_at IS NULL
	</select>
	
	<update id="update">
		UPDATE member
		SET
			name = #{name},
      		birth_date = #{birthDate},
      		profile_image = #{profileImage}
      	WHERE id=#{id}
	</update>

	<update id="updatePassword">
		UPDATE member
		SET
			password = #{password}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE member
		SET
			deleted_at = now()
		WHERE id = #{memberId}
	</update>

	<resultMap id="memberMap" type="MemberRecord">
		<id column="id" property="id" />
		<result column="email" property="email" />
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="role" property="role" />
		<result column="created_at" property="createdAt" />
		<result column="birth_date" property="birthDate" />
		<result column="profile_image" property="profileImage" />
	</resultMap>

	<resultMap id="memberJoinMap" type="MemberRecord">
		<id column="m_id" property="id" />
		<result column="m_name" property="name" />
		<result column="m_profile_image" property="profileImage" />
	</resultMap>
</mapper>